{"version":3,"sources":["../node_modules/headroom.js/dist/headroom.js","../node_modules/smoothscroll-polyfill/dist/smoothscroll.js","res/header.js"],"names":["polyfill","console","log","burger","document","querySelector","nav","addEventListener","classList","toggle","contains","remove","setTimeout","header","getElementById","Headroom","offset","tolerance","classes","initial","pinned","unpinned","init"],"mappings":";;AAkdA,IAAA,GA5cA,SAAA,EAAA,GACA,aAEA,mBAAA,GAAA,EAAA,IAEA,EAAA,GAAA,GAEA,iBAAA,QAEA,OAAA,QAAA,IAIA,EAAA,SAAA,IAbA,CAeA,KAAA,WACA,aAIA,IAAA,EAAA,CACA,OAAA,aAAA,KACA,UAAA,cAAA,SAAA,gBACA,OAAA,OAAA,uBAAA,OAAA,6BAAA,OAAA,2BASA,SAAA,EAAA,GACA,KAAA,SAAA,EACA,KAAA,SAAA,EAqFA,SAAA,EAAA,EAAA,GAZA,IAAA,EAaA,EA1CA,SAAA,EAAA,GACA,GAAA,UAAA,QAAA,EACA,MAAA,IAAA,MAAA,wCAGA,IACA,EACA,EAdA,EAYA,EAAA,GAAA,GAIA,IAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,CACA,IAAA,EAAA,UAAA,IAAA,GAEA,IAAA,KAAA,EAEA,iBAAA,EAAA,KArBA,EAqBA,EAAA,KApBA,oBAAA,SAAA,IAAA,QAAA,EAAA,UAwBA,EAAA,GAAA,EAAA,IAAA,EAAA,GAHA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,IAQA,OAAA,EAmBA,CAAA,EAAA,EAAA,SAEA,KAAA,iBAAA,EACA,KAAA,KAAA,EACA,KAAA,WAjBA,EAiBA,EAAA,aAhBA,OAAA,GAAA,EAAA,CAAA,KAAA,EAAA,GAAA,GAiBA,KAAA,QAAA,EAAA,QACA,KAAA,OAAA,EAAA,OACA,KAAA,SAAA,EAAA,SACA,KAAA,aAAA,EACA,KAAA,MAAA,EAAA,MACA,KAAA,QAAA,EAAA,QACA,KAAA,MAAA,EAAA,MACA,KAAA,SAAA,EAAA,SACA,KAAA,SAAA,EAAA,SACA,KAAA,YAAA,EAAA,YAqUA,OAlbA,OAAA,sBAAA,OAAA,uBAAA,OAAA,6BAAA,OAAA,yBAWA,EAAA,UAAA,CACA,YAAA,EAMA,OAAA,WACA,KAAA,UAAA,KAAA,WACA,KAAA,SAAA,GAOA,YAAA,WACA,KAAA,UACA,sBAAA,KAAA,cAAA,KAAA,YAAA,KAAA,OAAA,KAAA,QACA,KAAA,SAAA,IAOA,YAAA,WACA,KAAA,gBAyEA,EAAA,UAAA,CACA,YAAA,EAKA,KAAA,WACA,GAAA,EAAA,eAWA,OAPA,KAAA,UAAA,IAAA,EAAA,KAAA,OAAA,KAAA,OACA,KAAA,KAAA,UAAA,IAAA,KAAA,QAAA,SAIA,WAAA,KAAA,YAAA,KAAA,MAAA,KAEA,MAMA,QAAA,WACA,IAAA,EAAA,KAAA,QAIA,IAAA,IAAA,KAFA,KAAA,aAAA,EAEA,EACA,EAAA,eAAA,IACA,KAAA,KAAA,UAAA,OAAA,EAAA,IAIA,KAAA,SAAA,oBAAA,SAAA,KAAA,WAAA,IAOA,YAAA,WACA,KAAA,cACA,KAAA,iBAAA,KAAA,aACA,KAAA,aAAA,EACA,KAAA,SAAA,iBAAA,SAAA,KAAA,WAAA,GAEA,KAAA,UAAA,gBAOA,MAAA,WACA,IAAA,EAAA,KAAA,KAAA,UACA,EAAA,KAAA,SAEA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,YACA,EAAA,IAAA,EAAA,UACA,EAAA,OAAA,EAAA,QACA,KAAA,SAAA,KAAA,QAAA,KAAA,QAOA,IAAA,WACA,IAAA,EAAA,KAAA,KAAA,UACA,EAAA,KAAA,QAEA,EAAA,SAAA,EAAA,YACA,EAAA,OAAA,EAAA,UACA,EAAA,IAAA,EAAA,QACA,KAAA,OAAA,KAAA,MAAA,KAAA,QAOA,IAAA,WACA,IAAA,EAAA,KAAA,KAAA,UACA,EAAA,KAAA,QAEA,EAAA,SAAA,EAAA,OACA,EAAA,IAAA,EAAA,KACA,EAAA,OAAA,EAAA,QACA,KAAA,OAAA,KAAA,MAAA,KAAA,QAOA,OAAA,WACA,IAAA,EAAA,KAAA,KAAA,UACA,EAAA,KAAA,QAEA,EAAA,SAAA,EAAA,UACA,EAAA,IAAA,EAAA,QACA,EAAA,OAAA,EAAA,KACA,KAAA,UAAA,KAAA,SAAA,KAAA,QAIA,OAAA,WACA,IAAA,EAAA,KAAA,KAAA,UACA,EAAA,KAAA,QAEA,EAAA,SAAA,EAAA,UACA,EAAA,IAAA,EAAA,QACA,EAAA,OAAA,EAAA,WACA,KAAA,UAAA,KAAA,SAAA,KAAA,QAOA,UAAA,WACA,IAAA,EAAA,KAAA,KAAA,UACA,EAAA,KAAA,QAEA,EAAA,SAAA,EAAA,aACA,EAAA,IAAA,EAAA,WACA,EAAA,OAAA,EAAA,QACA,KAAA,aAAA,KAAA,YAAA,KAAA,QASA,WAAA,WACA,YAAA,IAAA,KAAA,SAAA,YACA,KAAA,SAAA,iBACA,IAAA,KAAA,SAAA,UACA,KAAA,SAAA,WACA,SAAA,iBAAA,SAAA,KAAA,YAAA,SAAA,MAAA,WAQA,kBAAA,WACA,OAAA,OAAA,aACA,SAAA,gBAAA,cACA,SAAA,KAAA,cAQA,yBAAA,SAAA,GACA,OAAA,KAAA,IACA,EAAA,aACA,EAAA,eAQA,0BAAA,WACA,OAAA,KAAA,WAAA,QAAA,KAAA,WAAA,SAAA,KACA,KAAA,oBACA,KAAA,yBAAA,KAAA,WAQA,kBAAA,WACA,IAAA,EAAA,SAAA,KACA,EAAA,SAAA,gBAEA,OAAA,KAAA,IACA,EAAA,aAAA,EAAA,aACA,EAAA,aAAA,EAAA,aACA,EAAA,aAAA,EAAA,eASA,iBAAA,SAAA,GACA,OAAA,KAAA,IACA,EAAA,aACA,EAAA,aACA,EAAA,eAQA,kBAAA,WACA,OAAA,KAAA,WAAA,QAAA,KAAA,WAAA,SAAA,KACA,KAAA,oBACA,KAAA,iBAAA,KAAA,WAQA,cAAA,SAAA,GACA,IAAA,EAAA,EAAA,EACA,EAAA,EAAA,KAAA,4BAAA,KAAA,oBAEA,OAAA,GAAA,GAQA,kBAAA,SAAA,EAAA,GACA,OAAA,KAAA,IAAA,EAAA,KAAA,mBAAA,KAAA,UAAA,IASA,YAAA,SAAA,EAAA,GACA,IAAA,EAAA,EAAA,KAAA,iBACA,EAAA,GAAA,KAAA,OAEA,OAAA,GAAA,GAAA,GASA,UAAA,SAAA,EAAA,GACA,IAAA,EAAA,EAAA,KAAA,iBACA,EAAA,GAAA,KAAA,OAEA,OAAA,GAAA,GAAA,GAMA,OAAA,WACA,IAAA,EAAA,KAAA,aACA,EAAA,EAAA,KAAA,iBAAA,OAAA,KACA,EAAA,KAAA,kBAAA,EAAA,GAEA,KAAA,cAAA,KAIA,GAAA,KAAA,OACA,KAAA,MAEA,KAAA,SAGA,EAAA,KAAA,qBAAA,KAAA,oBACA,KAAA,SAGA,KAAA,YAGA,KAAA,YAAA,EAAA,GACA,KAAA,QAEA,KAAA,UAAA,EAAA,IACA,KAAA,MAGA,KAAA,iBAAA,KAOA,EAAA,QAAA,CACA,UAAA,CACA,GAAA,EACA,KAAA,GAEA,OAAA,EACA,SAAA,OACA,QAAA,CACA,OAAA,mBACA,SAAA,qBACA,IAAA,gBACA,OAAA,oBACA,OAAA,mBACA,UAAA,uBACA,QAAA,aAGA,EAAA,oBAAA,IAAA,GAAA,EAAA,KAAA,EAAA,MAAA,EAAA,UAEA;;CChdA,WACA,aAGA,SAAA,IAEA,IAAA,EAAA,OACA,EAAA,SAGA,KACA,mBAAA,EAAA,gBAAA,QACA,IAAA,EAAA,+BAFA,CAQA,IAuBA,EAvBA,EAAA,EAAA,aAAA,EAAA,QACA,EAAA,IAGA,EAAA,CACA,OAAA,EAAA,QAAA,EAAA,SACA,SAAA,EAAA,SACA,cAAA,EAAA,UAAA,QAAA,EACA,eAAA,EAAA,UAAA,gBAIA,EACA,EAAA,aAAA,EAAA,YAAA,IACA,EAAA,YAAA,IAAA,KAAA,EAAA,aACA,KAAA,IAmBA,GAXA,EAWA,EAAA,UAAA,UARA,IAAA,OAFA,CAAA,QAAA,WAAA,SAEA,KAAA,MAAA,KAAA,GAQA,EAAA,GA0LA,EAAA,OAAA,EAAA,SAAA,gBAEA,IAAA,UAAA,MAKA,IAAA,EAAA,UAAA,IAoBA,EAAA,KACA,EACA,EAAA,UACA,IAAA,UAAA,GAAA,OACA,UAAA,GAAA,KACA,EAAA,SAAA,EAAA,iBACA,IAAA,UAAA,GAAA,MACA,UAAA,GAAA,IACA,EAAA,SAAA,EAAA,aA3BA,EAAA,OAAA,KACA,OACA,IAAA,UAAA,GAAA,KACA,UAAA,GAAA,KACA,iBAAA,UAAA,GACA,UAAA,GACA,EAAA,SAAA,EAAA,iBAEA,IAAA,UAAA,GAAA,IACA,UAAA,GAAA,SACA,IAAA,UAAA,GACA,UAAA,GACA,EAAA,SAAA,EAAA,eAoBA,EAAA,SAAA,gBAEA,IAAA,UAAA,KAKA,EAAA,UAAA,IACA,EAAA,SAAA,KACA,OACA,IAAA,UAAA,GAAA,KACA,UAAA,GAAA,KACA,iBAAA,UAAA,GAAA,UAAA,GAAA,OACA,IAAA,UAAA,GAAA,IACA,UAAA,GAAA,SACA,IAAA,UAAA,GAAA,UAAA,GAAA,GAOA,EAAA,KACA,EACA,EAAA,OACA,UAAA,GAAA,MAAA,EAAA,SAAA,EAAA,eACA,UAAA,GAAA,KAAA,EAAA,SAAA,EAAA,gBAKA,EAAA,UAAA,OAAA,EAAA,UAAA,SAAA,WAEA,QAAA,IAAA,UAAA,GAKA,IAAA,IAAA,EAAA,UAAA,IAAA,CAqBA,IAAA,EAAA,UAAA,GAAA,KACA,EAAA,UAAA,GAAA,IAGA,EAAA,KACA,KACA,UACA,IAAA,EAAA,KAAA,aAAA,OACA,IAAA,EAAA,KAAA,YAAA,OA7BA,CAEA,GAAA,iBAAA,UAAA,SAAA,IAAA,UAAA,GACA,MAAA,IAAA,YAAA,gCAGA,EAAA,cAAA,KACA,UAEA,IAAA,UAAA,GAAA,OACA,UAAA,GAAA,KACA,iBAAA,UAAA,KAAA,UAAA,GAAA,KAAA,gBAEA,IAAA,UAAA,GAAA,MACA,UAAA,GAAA,SACA,IAAA,UAAA,KAAA,UAAA,GAAA,KAAA,aAmBA,EAAA,UAAA,SAAA,gBAEA,IAAA,UAAA,MAKA,IAAA,EAAA,UAAA,IAcA,KAAA,OAAA,CACA,OAAA,UAAA,GAAA,KAAA,KAAA,WACA,MAAA,UAAA,GAAA,IAAA,KAAA,UACA,SAAA,UAAA,GAAA,WAhBA,EAAA,cAAA,KACA,UACA,IAAA,UAAA,GAAA,OACA,UAAA,GAAA,KAAA,KAAA,aACA,UAAA,GAAA,KAAA,gBACA,IAAA,UAAA,GAAA,MACA,UAAA,GAAA,IAAA,KAAA,YACA,UAAA,GAAA,KAAA,aAcA,EAAA,UAAA,eAAA,WAEA,IAAA,IAAA,EAAA,UAAA,IAAA,CAUA,IAAA,EAzOA,SAAA,GACA,KAAA,IAAA,EAAA,OAAA,IAAA,EAAA,IACA,EAAA,EAAA,YAAA,EAAA,KAGA,OAAA,EAoOA,CAAA,MACA,EAAA,EAAA,wBACA,EAAA,KAAA,wBAEA,IAAA,EAAA,MAEA,EAAA,KACA,KACA,EACA,EAAA,WAAA,EAAA,KAAA,EAAA,KACA,EAAA,UAAA,EAAA,IAAA,EAAA,KAIA,UAAA,EAAA,iBAAA,GAAA,UACA,EAAA,SAAA,CACA,KAAA,EAAA,KACA,IAAA,EAAA,IACA,SAAA,YAKA,EAAA,SAAA,CACA,KAAA,EAAA,KACA,IAAA,EAAA,IACA,SAAA,gBAnCA,EAAA,eAAA,KACA,UACA,IAAA,UAAA,IAAA,UAAA,KAnUA,SAAA,EAAA,EAAA,GACA,KAAA,WAAA,EACA,KAAA,UAAA,EAmBA,SAAA,EAAA,GACA,GACA,OAAA,GACA,iBAAA,QACA,IAAA,EAAA,UACA,SAAA,EAAA,UACA,YAAA,EAAA,SAIA,OAAA,EAGA,GAAA,iBAAA,GAAA,WAAA,EAAA,SAEA,OAAA,EAIA,MAAA,IAAA,UACA,oCACA,EAAA,SACA,yDAWA,SAAA,EAAA,EAAA,GACA,MAAA,MAAA,EACA,EAAA,aAAA,EAAA,EAAA,aAGA,MAAA,EACA,EAAA,YAAA,EAAA,EAAA,iBADA,EAYA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,iBAAA,EAAA,MAAA,WAAA,GAEA,MAAA,SAAA,GAAA,WAAA,EAUA,SAAA,EAAA,GACA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,KACA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,KAEA,OAAA,GAAA,EAuBA,SAAA,EAAA,GACA,IACA,EACA,EACA,EAxGA,EAyGA,GAJA,IAIA,EAAA,WAAA,EAzGA,EA4GA,EAAA,EAAA,EAAA,EAAA,EAGA,EA9GA,IAAA,EAAA,KAAA,IAAA,KAAA,GAAA,IAgHA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,EACA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,EAEA,EAAA,OAAA,KAAA,EAAA,WAAA,EAAA,GAGA,IAAA,EAAA,GAAA,IAAA,EAAA,GACA,EAAA,sBAAA,EAAA,KAAA,EAAA,IAYA,SAAA,EAAA,EAAA,EAAA,GACA,IAAA,EACA,EACA,EACA,EACA,EAAA,IAGA,IAAA,EAAA,MACA,EAAA,EACA,EAAA,EAAA,SAAA,EAAA,YACA,EAAA,EAAA,SAAA,EAAA,YACA,EAAA,EAAA,SAEA,EAAA,EACA,EAAA,EAAA,WACA,EAAA,EAAA,UACA,EAAA,GAIA,EAAA,CACA,WAAA,EACA,OAAA,EACA,UAAA,EACA,OAAA,EACA,OAAA,EACA,EAAA,EACA,EAAA,KA+LA,iBAAA,SAAA,oBAAA,OAEA,OAAA,QAAA,CAAA,SAAA,GAGA,IA5aA;;ACDA,aACA,IAAA,EAAA,EAAA,QAAA,gBACA,EAAA,EAAA,QAAA,0BAEA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,IAAA,WACiBA,EAAAA,QAAAA,WACbC,QAAQC,IAAI,sBACNC,IAAAA,EAASC,SAASC,cAAc,WAChCC,EAAMF,SAASC,cAAc,YAEnCF,EAAOI,iBAAiB,QAAS,WAC7BJ,EAAOK,UAAUC,OAAO,aACpBH,EAAIE,UAAUE,SAAS,aACvBJ,EAAIE,UAAUC,OAAO,aACrBH,EAAIE,UAAUG,OAAO,YACrBC,WAAW,WACPN,EAAIE,UAAUG,OAAO,cACtB,MACIL,EAAIE,UAAUE,SAAS,cAC9BJ,EAAIE,UAAUC,OAAO,aACrBH,EAAIE,UAAUG,OAAO,aACrBL,EAAIE,UAAUC,OAAO,cAErBH,EAAIE,UAAUC,OAAO,aACrBH,EAAIE,UAAUC,OAAO,eAIvBI,IAAAA,EAAST,SAASU,eAAe,UACtB,IAAIC,EAAJ,QAAaF,EAAQ,CAClCG,OAAQ,IACRC,UAAW,EACXC,QAAS,CACTC,QAAS,WACTC,OAAQ,cACRC,SAAU,gBAGLC,OAlCb","file":"header.5b852a05.js","sourceRoot":"../public","sourcesContent":["/*!\n * headroom.js v0.9.4 - Give your page some headroom. Hide your header until you need it\n * Copyright (c) 2017 Nick Williams - http://wicky.nillia.ms/headroom.js\n * License: MIT\n */\n\n(function(root, factory) {\n  'use strict';\n\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], factory);\n  }\n  else if (typeof exports === 'object') {\n    // COMMONJS\n    module.exports = factory();\n  }\n  else {\n    // BROWSER\n    root.Headroom = factory();\n  }\n}(this, function() {\n  'use strict';\n\n  /* exported features */\n  \n  var features = {\n    bind : !!(function(){}.bind),\n    classList : 'classList' in document.documentElement,\n    rAF : !!(window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame)\n  };\n  window.requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame;\n  \n  /**\n   * Handles debouncing of events via requestAnimationFrame\n   * @see http://www.html5rocks.com/en/tutorials/speed/animations/\n   * @param {Function} callback The callback to handle whichever event\n   */\n  function Debouncer (callback) {\n    this.callback = callback;\n    this.ticking = false;\n  }\n  Debouncer.prototype = {\n    constructor : Debouncer,\n  \n    /**\n     * dispatches the event to the supplied callback\n     * @private\n     */\n    update : function() {\n      this.callback && this.callback();\n      this.ticking = false;\n    },\n  \n    /**\n     * ensures events don't get stacked\n     * @private\n     */\n    requestTick : function() {\n      if(!this.ticking) {\n        requestAnimationFrame(this.rafCallback || (this.rafCallback = this.update.bind(this)));\n        this.ticking = true;\n      }\n    },\n  \n    /**\n     * Attach this as the event listeners\n     */\n    handleEvent : function() {\n      this.requestTick();\n    }\n  };\n  /**\n   * Check if object is part of the DOM\n   * @constructor\n   * @param {Object} obj element to check\n   */\n  function isDOMElement(obj) {\n    return obj && typeof window !== 'undefined' && (obj === window || obj.nodeType);\n  }\n  \n  /**\n   * Helper function for extending objects\n   */\n  function extend (object /*, objectN ... */) {\n    if(arguments.length <= 0) {\n      throw new Error('Missing arguments in extend function');\n    }\n  \n    var result = object || {},\n        key,\n        i;\n  \n    for (i = 1; i < arguments.length; i++) {\n      var replacement = arguments[i] || {};\n  \n      for (key in replacement) {\n        // Recurse into object except if the object is a DOM element\n        if(typeof result[key] === 'object' && ! isDOMElement(result[key])) {\n          result[key] = extend(result[key], replacement[key]);\n        }\n        else {\n          result[key] = result[key] || replacement[key];\n        }\n      }\n    }\n  \n    return result;\n  }\n  \n  /**\n   * Helper function for normalizing tolerance option to object format\n   */\n  function normalizeTolerance (t) {\n    return t === Object(t) ? t : { down : t, up : t };\n  }\n  \n  /**\n   * UI enhancement for fixed headers.\n   * Hides header when scrolling down\n   * Shows header when scrolling up\n   * @constructor\n   * @param {DOMElement} elem the header element\n   * @param {Object} options options for the widget\n   */\n  function Headroom (elem, options) {\n    options = extend(options, Headroom.options);\n  \n    this.lastKnownScrollY = 0;\n    this.elem             = elem;\n    this.tolerance        = normalizeTolerance(options.tolerance);\n    this.classes          = options.classes;\n    this.offset           = options.offset;\n    this.scroller         = options.scroller;\n    this.initialised      = false;\n    this.onPin            = options.onPin;\n    this.onUnpin          = options.onUnpin;\n    this.onTop            = options.onTop;\n    this.onNotTop         = options.onNotTop;\n    this.onBottom         = options.onBottom;\n    this.onNotBottom      = options.onNotBottom;\n  }\n  Headroom.prototype = {\n    constructor : Headroom,\n  \n    /**\n     * Initialises the widget\n     */\n    init : function() {\n      if(!Headroom.cutsTheMustard) {\n        return;\n      }\n  \n      this.debouncer = new Debouncer(this.update.bind(this));\n      this.elem.classList.add(this.classes.initial);\n  \n      // defer event registration to handle browser\n      // potentially restoring previous scroll position\n      setTimeout(this.attachEvent.bind(this), 100);\n  \n      return this;\n    },\n  \n    /**\n     * Unattaches events and removes any classes that were added\n     */\n    destroy : function() {\n      var classes = this.classes;\n  \n      this.initialised = false;\n  \n      for (var key in classes) {\n        if(classes.hasOwnProperty(key)) {\n          this.elem.classList.remove(classes[key]);\n        }\n      }\n  \n      this.scroller.removeEventListener('scroll', this.debouncer, false);\n    },\n  \n    /**\n     * Attaches the scroll event\n     * @private\n     */\n    attachEvent : function() {\n      if(!this.initialised){\n        this.lastKnownScrollY = this.getScrollY();\n        this.initialised = true;\n        this.scroller.addEventListener('scroll', this.debouncer, false);\n  \n        this.debouncer.handleEvent();\n      }\n    },\n  \n    /**\n     * Unpins the header if it's currently pinned\n     */\n    unpin : function() {\n      var classList = this.elem.classList,\n        classes = this.classes;\n  \n      if(classList.contains(classes.pinned) || !classList.contains(classes.unpinned)) {\n        classList.add(classes.unpinned);\n        classList.remove(classes.pinned);\n        this.onUnpin && this.onUnpin.call(this);\n      }\n    },\n  \n    /**\n     * Pins the header if it's currently unpinned\n     */\n    pin : function() {\n      var classList = this.elem.classList,\n        classes = this.classes;\n  \n      if(classList.contains(classes.unpinned)) {\n        classList.remove(classes.unpinned);\n        classList.add(classes.pinned);\n        this.onPin && this.onPin.call(this);\n      }\n    },\n  \n    /**\n     * Handles the top states\n     */\n    top : function() {\n      var classList = this.elem.classList,\n        classes = this.classes;\n  \n      if(!classList.contains(classes.top)) {\n        classList.add(classes.top);\n        classList.remove(classes.notTop);\n        this.onTop && this.onTop.call(this);\n      }\n    },\n  \n    /**\n     * Handles the not top state\n     */\n    notTop : function() {\n      var classList = this.elem.classList,\n        classes = this.classes;\n  \n      if(!classList.contains(classes.notTop)) {\n        classList.add(classes.notTop);\n        classList.remove(classes.top);\n        this.onNotTop && this.onNotTop.call(this);\n      }\n    },\n  \n    bottom : function() {\n      var classList = this.elem.classList,\n        classes = this.classes;\n  \n      if(!classList.contains(classes.bottom)) {\n        classList.add(classes.bottom);\n        classList.remove(classes.notBottom);\n        this.onBottom && this.onBottom.call(this);\n      }\n    },\n  \n    /**\n     * Handles the not top state\n     */\n    notBottom : function() {\n      var classList = this.elem.classList,\n        classes = this.classes;\n  \n      if(!classList.contains(classes.notBottom)) {\n        classList.add(classes.notBottom);\n        classList.remove(classes.bottom);\n        this.onNotBottom && this.onNotBottom.call(this);\n      }\n    },\n  \n    /**\n     * Gets the Y scroll position\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window.scrollY\n     * @return {Number} pixels the page has scrolled along the Y-axis\n     */\n    getScrollY : function() {\n      return (this.scroller.pageYOffset !== undefined)\n        ? this.scroller.pageYOffset\n        : (this.scroller.scrollTop !== undefined)\n          ? this.scroller.scrollTop\n          : (document.documentElement || document.body.parentNode || document.body).scrollTop;\n    },\n  \n    /**\n     * Gets the height of the viewport\n     * @see http://andylangton.co.uk/blog/development/get-viewport-size-width-and-height-javascript\n     * @return {int} the height of the viewport in pixels\n     */\n    getViewportHeight : function () {\n      return window.innerHeight\n        || document.documentElement.clientHeight\n        || document.body.clientHeight;\n    },\n  \n    /**\n     * Gets the physical height of the DOM element\n     * @param  {Object}  elm the element to calculate the physical height of which\n     * @return {int}     the physical height of the element in pixels\n     */\n    getElementPhysicalHeight : function (elm) {\n      return Math.max(\n        elm.offsetHeight,\n        elm.clientHeight\n      );\n    },\n  \n    /**\n     * Gets the physical height of the scroller element\n     * @return {int} the physical height of the scroller element in pixels\n     */\n    getScrollerPhysicalHeight : function () {\n      return (this.scroller === window || this.scroller === document.body)\n        ? this.getViewportHeight()\n        : this.getElementPhysicalHeight(this.scroller);\n    },\n  \n    /**\n     * Gets the height of the document\n     * @see http://james.padolsey.com/javascript/get-document-height-cross-browser/\n     * @return {int} the height of the document in pixels\n     */\n    getDocumentHeight : function () {\n      var body = document.body,\n        documentElement = document.documentElement;\n  \n      return Math.max(\n        body.scrollHeight, documentElement.scrollHeight,\n        body.offsetHeight, documentElement.offsetHeight,\n        body.clientHeight, documentElement.clientHeight\n      );\n    },\n  \n    /**\n     * Gets the height of the DOM element\n     * @param  {Object}  elm the element to calculate the height of which\n     * @return {int}     the height of the element in pixels\n     */\n    getElementHeight : function (elm) {\n      return Math.max(\n        elm.scrollHeight,\n        elm.offsetHeight,\n        elm.clientHeight\n      );\n    },\n  \n    /**\n     * Gets the height of the scroller element\n     * @return {int} the height of the scroller element in pixels\n     */\n    getScrollerHeight : function () {\n      return (this.scroller === window || this.scroller === document.body)\n        ? this.getDocumentHeight()\n        : this.getElementHeight(this.scroller);\n    },\n  \n    /**\n     * determines if the scroll position is outside of document boundaries\n     * @param  {int}  currentScrollY the current y scroll position\n     * @return {bool} true if out of bounds, false otherwise\n     */\n    isOutOfBounds : function (currentScrollY) {\n      var pastTop  = currentScrollY < 0,\n        pastBottom = currentScrollY + this.getScrollerPhysicalHeight() > this.getScrollerHeight();\n  \n      return pastTop || pastBottom;\n    },\n  \n    /**\n     * determines if the tolerance has been exceeded\n     * @param  {int} currentScrollY the current scroll y position\n     * @return {bool} true if tolerance exceeded, false otherwise\n     */\n    toleranceExceeded : function (currentScrollY, direction) {\n      return Math.abs(currentScrollY-this.lastKnownScrollY) >= this.tolerance[direction];\n    },\n  \n    /**\n     * determine if it is appropriate to unpin\n     * @param  {int} currentScrollY the current y scroll position\n     * @param  {bool} toleranceExceeded has the tolerance been exceeded?\n     * @return {bool} true if should unpin, false otherwise\n     */\n    shouldUnpin : function (currentScrollY, toleranceExceeded) {\n      var scrollingDown = currentScrollY > this.lastKnownScrollY,\n        pastOffset = currentScrollY >= this.offset;\n  \n      return scrollingDown && pastOffset && toleranceExceeded;\n    },\n  \n    /**\n     * determine if it is appropriate to pin\n     * @param  {int} currentScrollY the current y scroll position\n     * @param  {bool} toleranceExceeded has the tolerance been exceeded?\n     * @return {bool} true if should pin, false otherwise\n     */\n    shouldPin : function (currentScrollY, toleranceExceeded) {\n      var scrollingUp  = currentScrollY < this.lastKnownScrollY,\n        pastOffset = currentScrollY <= this.offset;\n  \n      return (scrollingUp && toleranceExceeded) || pastOffset;\n    },\n  \n    /**\n     * Handles updating the state of the widget\n     */\n    update : function() {\n      var currentScrollY  = this.getScrollY(),\n        scrollDirection = currentScrollY > this.lastKnownScrollY ? 'down' : 'up',\n        toleranceExceeded = this.toleranceExceeded(currentScrollY, scrollDirection);\n  \n      if(this.isOutOfBounds(currentScrollY)) { // Ignore bouncy scrolling in OSX\n        return;\n      }\n  \n      if (currentScrollY <= this.offset ) {\n        this.top();\n      } else {\n        this.notTop();\n      }\n  \n      if(currentScrollY + this.getViewportHeight() >= this.getScrollerHeight()) {\n        this.bottom();\n      }\n      else {\n        this.notBottom();\n      }\n  \n      if(this.shouldUnpin(currentScrollY, toleranceExceeded)) {\n        this.unpin();\n      }\n      else if(this.shouldPin(currentScrollY, toleranceExceeded)) {\n        this.pin();\n      }\n  \n      this.lastKnownScrollY = currentScrollY;\n    }\n  };\n  /**\n   * Default options\n   * @type {Object}\n   */\n  Headroom.options = {\n    tolerance : {\n      up : 0,\n      down : 0\n    },\n    offset : 0,\n    scroller: window,\n    classes : {\n      pinned : 'headroom--pinned',\n      unpinned : 'headroom--unpinned',\n      top : 'headroom--top',\n      notTop : 'headroom--not-top',\n      bottom : 'headroom--bottom',\n      notBottom : 'headroom--not-bottom',\n      initial : 'headroom'\n    }\n  };\n  Headroom.cutsTheMustard = typeof features !== 'undefined' && features.rAF && features.bind && features.classList;\n\n  return Headroom;\n}));","/* smoothscroll v0.4.4 - 2019 - Dustan Kasten, Jeremias Menichelli - MIT License */\n(function () {\n  'use strict';\n\n  // polyfill\n  function polyfill() {\n    // aliases\n    var w = window;\n    var d = document;\n\n    // return if scroll behavior is supported and polyfill is not forced\n    if (\n      'scrollBehavior' in d.documentElement.style &&\n      w.__forceSmoothScrollPolyfill__ !== true\n    ) {\n      return;\n    }\n\n    // globals\n    var Element = w.HTMLElement || w.Element;\n    var SCROLL_TIME = 468;\n\n    // object gathering original scroll methods\n    var original = {\n      scroll: w.scroll || w.scrollTo,\n      scrollBy: w.scrollBy,\n      elementScroll: Element.prototype.scroll || scrollElement,\n      scrollIntoView: Element.prototype.scrollIntoView\n    };\n\n    // define timing method\n    var now =\n      w.performance && w.performance.now\n        ? w.performance.now.bind(w.performance)\n        : Date.now;\n\n    /**\n     * indicates if a the current browser is made by Microsoft\n     * @method isMicrosoftBrowser\n     * @param {String} userAgent\n     * @returns {Boolean}\n     */\n    function isMicrosoftBrowser(userAgent) {\n      var userAgentPatterns = ['MSIE ', 'Trident/', 'Edge/'];\n\n      return new RegExp(userAgentPatterns.join('|')).test(userAgent);\n    }\n\n    /*\n     * IE has rounding bug rounding down clientHeight and clientWidth and\n     * rounding up scrollHeight and scrollWidth causing false positives\n     * on hasScrollableSpace\n     */\n    var ROUNDING_TOLERANCE = isMicrosoftBrowser(w.navigator.userAgent) ? 1 : 0;\n\n    /**\n     * changes scroll position inside an element\n     * @method scrollElement\n     * @param {Number} x\n     * @param {Number} y\n     * @returns {undefined}\n     */\n    function scrollElement(x, y) {\n      this.scrollLeft = x;\n      this.scrollTop = y;\n    }\n\n    /**\n     * returns result of applying ease math function to a number\n     * @method ease\n     * @param {Number} k\n     * @returns {Number}\n     */\n    function ease(k) {\n      return 0.5 * (1 - Math.cos(Math.PI * k));\n    }\n\n    /**\n     * indicates if a smooth behavior should be applied\n     * @method shouldBailOut\n     * @param {Number|Object} firstArg\n     * @returns {Boolean}\n     */\n    function shouldBailOut(firstArg) {\n      if (\n        firstArg === null ||\n        typeof firstArg !== 'object' ||\n        firstArg.behavior === undefined ||\n        firstArg.behavior === 'auto' ||\n        firstArg.behavior === 'instant'\n      ) {\n        // first argument is not an object/null\n        // or behavior is auto, instant or undefined\n        return true;\n      }\n\n      if (typeof firstArg === 'object' && firstArg.behavior === 'smooth') {\n        // first argument is an object and behavior is smooth\n        return false;\n      }\n\n      // throw error when behavior is not supported\n      throw new TypeError(\n        'behavior member of ScrollOptions ' +\n          firstArg.behavior +\n          ' is not a valid value for enumeration ScrollBehavior.'\n      );\n    }\n\n    /**\n     * indicates if an element has scrollable space in the provided axis\n     * @method hasScrollableSpace\n     * @param {Node} el\n     * @param {String} axis\n     * @returns {Boolean}\n     */\n    function hasScrollableSpace(el, axis) {\n      if (axis === 'Y') {\n        return el.clientHeight + ROUNDING_TOLERANCE < el.scrollHeight;\n      }\n\n      if (axis === 'X') {\n        return el.clientWidth + ROUNDING_TOLERANCE < el.scrollWidth;\n      }\n    }\n\n    /**\n     * indicates if an element has a scrollable overflow property in the axis\n     * @method canOverflow\n     * @param {Node} el\n     * @param {String} axis\n     * @returns {Boolean}\n     */\n    function canOverflow(el, axis) {\n      var overflowValue = w.getComputedStyle(el, null)['overflow' + axis];\n\n      return overflowValue === 'auto' || overflowValue === 'scroll';\n    }\n\n    /**\n     * indicates if an element can be scrolled in either axis\n     * @method isScrollable\n     * @param {Node} el\n     * @param {String} axis\n     * @returns {Boolean}\n     */\n    function isScrollable(el) {\n      var isScrollableY = hasScrollableSpace(el, 'Y') && canOverflow(el, 'Y');\n      var isScrollableX = hasScrollableSpace(el, 'X') && canOverflow(el, 'X');\n\n      return isScrollableY || isScrollableX;\n    }\n\n    /**\n     * finds scrollable parent of an element\n     * @method findScrollableParent\n     * @param {Node} el\n     * @returns {Node} el\n     */\n    function findScrollableParent(el) {\n      while (el !== d.body && isScrollable(el) === false) {\n        el = el.parentNode || el.host;\n      }\n\n      return el;\n    }\n\n    /**\n     * self invoked function that, given a context, steps through scrolling\n     * @method step\n     * @param {Object} context\n     * @returns {undefined}\n     */\n    function step(context) {\n      var time = now();\n      var value;\n      var currentX;\n      var currentY;\n      var elapsed = (time - context.startTime) / SCROLL_TIME;\n\n      // avoid elapsed times higher than one\n      elapsed = elapsed > 1 ? 1 : elapsed;\n\n      // apply easing to elapsed time\n      value = ease(elapsed);\n\n      currentX = context.startX + (context.x - context.startX) * value;\n      currentY = context.startY + (context.y - context.startY) * value;\n\n      context.method.call(context.scrollable, currentX, currentY);\n\n      // scroll more if we have not reached our destination\n      if (currentX !== context.x || currentY !== context.y) {\n        w.requestAnimationFrame(step.bind(w, context));\n      }\n    }\n\n    /**\n     * scrolls window or element with a smooth behavior\n     * @method smoothScroll\n     * @param {Object|Node} el\n     * @param {Number} x\n     * @param {Number} y\n     * @returns {undefined}\n     */\n    function smoothScroll(el, x, y) {\n      var scrollable;\n      var startX;\n      var startY;\n      var method;\n      var startTime = now();\n\n      // define scroll context\n      if (el === d.body) {\n        scrollable = w;\n        startX = w.scrollX || w.pageXOffset;\n        startY = w.scrollY || w.pageYOffset;\n        method = original.scroll;\n      } else {\n        scrollable = el;\n        startX = el.scrollLeft;\n        startY = el.scrollTop;\n        method = scrollElement;\n      }\n\n      // scroll looping over a frame\n      step({\n        scrollable: scrollable,\n        method: method,\n        startTime: startTime,\n        startX: startX,\n        startY: startY,\n        x: x,\n        y: y\n      });\n    }\n\n    // ORIGINAL METHODS OVERRIDES\n    // w.scroll and w.scrollTo\n    w.scroll = w.scrollTo = function() {\n      // avoid action when no arguments are passed\n      if (arguments[0] === undefined) {\n        return;\n      }\n\n      // avoid smooth behavior if not required\n      if (shouldBailOut(arguments[0]) === true) {\n        original.scroll.call(\n          w,\n          arguments[0].left !== undefined\n            ? arguments[0].left\n            : typeof arguments[0] !== 'object'\n              ? arguments[0]\n              : w.scrollX || w.pageXOffset,\n          // use top prop, second argument if present or fallback to scrollY\n          arguments[0].top !== undefined\n            ? arguments[0].top\n            : arguments[1] !== undefined\n              ? arguments[1]\n              : w.scrollY || w.pageYOffset\n        );\n\n        return;\n      }\n\n      // LET THE SMOOTHNESS BEGIN!\n      smoothScroll.call(\n        w,\n        d.body,\n        arguments[0].left !== undefined\n          ? ~~arguments[0].left\n          : w.scrollX || w.pageXOffset,\n        arguments[0].top !== undefined\n          ? ~~arguments[0].top\n          : w.scrollY || w.pageYOffset\n      );\n    };\n\n    // w.scrollBy\n    w.scrollBy = function() {\n      // avoid action when no arguments are passed\n      if (arguments[0] === undefined) {\n        return;\n      }\n\n      // avoid smooth behavior if not required\n      if (shouldBailOut(arguments[0])) {\n        original.scrollBy.call(\n          w,\n          arguments[0].left !== undefined\n            ? arguments[0].left\n            : typeof arguments[0] !== 'object' ? arguments[0] : 0,\n          arguments[0].top !== undefined\n            ? arguments[0].top\n            : arguments[1] !== undefined ? arguments[1] : 0\n        );\n\n        return;\n      }\n\n      // LET THE SMOOTHNESS BEGIN!\n      smoothScroll.call(\n        w,\n        d.body,\n        ~~arguments[0].left + (w.scrollX || w.pageXOffset),\n        ~~arguments[0].top + (w.scrollY || w.pageYOffset)\n      );\n    };\n\n    // Element.prototype.scroll and Element.prototype.scrollTo\n    Element.prototype.scroll = Element.prototype.scrollTo = function() {\n      // avoid action when no arguments are passed\n      if (arguments[0] === undefined) {\n        return;\n      }\n\n      // avoid smooth behavior if not required\n      if (shouldBailOut(arguments[0]) === true) {\n        // if one number is passed, throw error to match Firefox implementation\n        if (typeof arguments[0] === 'number' && arguments[1] === undefined) {\n          throw new SyntaxError('Value could not be converted');\n        }\n\n        original.elementScroll.call(\n          this,\n          // use left prop, first number argument or fallback to scrollLeft\n          arguments[0].left !== undefined\n            ? ~~arguments[0].left\n            : typeof arguments[0] !== 'object' ? ~~arguments[0] : this.scrollLeft,\n          // use top prop, second argument or fallback to scrollTop\n          arguments[0].top !== undefined\n            ? ~~arguments[0].top\n            : arguments[1] !== undefined ? ~~arguments[1] : this.scrollTop\n        );\n\n        return;\n      }\n\n      var left = arguments[0].left;\n      var top = arguments[0].top;\n\n      // LET THE SMOOTHNESS BEGIN!\n      smoothScroll.call(\n        this,\n        this,\n        typeof left === 'undefined' ? this.scrollLeft : ~~left,\n        typeof top === 'undefined' ? this.scrollTop : ~~top\n      );\n    };\n\n    // Element.prototype.scrollBy\n    Element.prototype.scrollBy = function() {\n      // avoid action when no arguments are passed\n      if (arguments[0] === undefined) {\n        return;\n      }\n\n      // avoid smooth behavior if not required\n      if (shouldBailOut(arguments[0]) === true) {\n        original.elementScroll.call(\n          this,\n          arguments[0].left !== undefined\n            ? ~~arguments[0].left + this.scrollLeft\n            : ~~arguments[0] + this.scrollLeft,\n          arguments[0].top !== undefined\n            ? ~~arguments[0].top + this.scrollTop\n            : ~~arguments[1] + this.scrollTop\n        );\n\n        return;\n      }\n\n      this.scroll({\n        left: ~~arguments[0].left + this.scrollLeft,\n        top: ~~arguments[0].top + this.scrollTop,\n        behavior: arguments[0].behavior\n      });\n    };\n\n    // Element.prototype.scrollIntoView\n    Element.prototype.scrollIntoView = function() {\n      // avoid smooth behavior if not required\n      if (shouldBailOut(arguments[0]) === true) {\n        original.scrollIntoView.call(\n          this,\n          arguments[0] === undefined ? true : arguments[0]\n        );\n\n        return;\n      }\n\n      // LET THE SMOOTHNESS BEGIN!\n      var scrollableParent = findScrollableParent(this);\n      var parentRects = scrollableParent.getBoundingClientRect();\n      var clientRects = this.getBoundingClientRect();\n\n      if (scrollableParent !== d.body) {\n        // reveal element inside parent\n        smoothScroll.call(\n          this,\n          scrollableParent,\n          scrollableParent.scrollLeft + clientRects.left - parentRects.left,\n          scrollableParent.scrollTop + clientRects.top - parentRects.top\n        );\n\n        // reveal parent in viewport unless is fixed\n        if (w.getComputedStyle(scrollableParent).position !== 'fixed') {\n          w.scrollBy({\n            left: parentRects.left,\n            top: parentRects.top,\n            behavior: 'smooth'\n          });\n        }\n      } else {\n        // reveal element in viewport\n        w.scrollBy({\n          left: clientRects.left,\n          top: clientRects.top,\n          behavior: 'smooth'\n        });\n      }\n    };\n  }\n\n  if (typeof exports === 'object' && typeof module !== 'undefined') {\n    // commonjs\n    module.exports = { polyfill: polyfill };\n  } else {\n    // global\n    polyfill();\n  }\n\n}());\n","\"use strict\";\nimport Headroom from 'headroom.js'\nimport smoothscroll from 'smoothscroll-polyfill';\n\n(() => {\n    smoothscroll.polyfill();\n    console.log('don\\'t be cheeky 🥺')\n    const burger = document.querySelector('.burger');\n    const nav = document.querySelector('#navMenu');\n    \n    burger.addEventListener('click', () => {\n        burger.classList.toggle('is-active');\n        if (nav.classList.contains(\"bounceIn\")) {\n            nav.classList.toggle(\"bounceOut\");\n            nav.classList.remove('bounceIn');\n            setTimeout(() => {\n                nav.classList.remove('is-active');\n            }, 720)\n        } else if (nav.classList.contains(\"bounceOut\")) {\n            nav.classList.toggle('is-active');\n            nav.classList.remove('bounceOut');\n            nav.classList.toggle('bounceIn')\n        } else {\n            nav.classList.toggle('is-active');\n            nav.classList.toggle(\"bounceIn\")\n        }\n\n    });\n    const header = document.getElementById('header');\n    const headroom = new Headroom(header, {\n        offset: 105,\n        tolerance: 5,\n        classes: {\n        initial: \"animated\",\n        pinned: \"slideInDown\",\n        unpinned: \"slideOutUp\"\n        }\n    });\n    headroom.init();\n    })();"]}